version: '3.8'
services:

  embeddings:
    build:
      context: ./embeddings_iep

    container_name: embeddings_iep
    networks:
      - my_network
    ports:
      - "5001:5001"
    environment:
      - OPENAI_API_KEY

  gpt:
    build:
      context: ./gpt_iep

    container_name: gpt_iep
    networks:
      - my_network
    ports:
      - "5002:5002"
    
    environment:
      - OPENAI_API_KEY


  audio_gen:
    build:
      context: ./audio_gen_iep

    container_name: audio_gen_iep
    networks:
      - my_network
    ports:
      - "5003:5003"
    environment:
      - OPENAI_API_KEY

  course_creator:
    build:
      context: ./course_creator

    container_name: course_creator
    networks:
      - my_network
    ports:
      - "5004:5004"
    environment:
      - OPENAI_API_KEY

  eep:
    env_file:
      - ./.env
    build:
      context: ./eep

    container_name: eep
    networks:
      - my_network
    ports:
      - "5000:5000"

    healthcheck:
      test:  ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 10s
  frontend:
    env_file:
      - ./.env
    build:
      context: ./learning-platform
      args:
        NEXT_PUBLIC_AUTH_API_URL: ${NEXT_PUBLIC_AUTH_API_URL}

    ports:
      - "3000:3000"
    networks:
      - my_network

    depends_on:
      eep:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090" 
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000" 
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'admin'  
    restart: always
    depends_on:
      - prometheus

  

networks:
  my_network:
    driver: bridge

volumes:
  mysql_data: